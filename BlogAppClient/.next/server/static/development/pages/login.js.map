{"version":3,"file":"static\\development\\pages\\login.js","sources":["webpack:///webpack/bootstrap","webpack:///./GQL/GraphQL.js","webpack:///./GQL/Mutation.js","webpack:///./GQL/Query.js","webpack:///./actions/actions.js","webpack:///./actions/actionsTypes.js","webpack:///./components/LoginRegister/login.js","webpack:///./components/LoginRegister/loginRegister.js","webpack:///./components/LoginRegister/register.js","webpack:///./components/LoginRegister/style.less","webpack:///./pages/login.js","webpack:///./utils/utils.js","webpack:///external \"apollo-boost\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/router\"","webpack:///external \"node-fetch\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-cookies\"","webpack:///external \"react-redux\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","import ApolloClient from \"apollo-boost\";\r\nimport fetch from \"node-fetch\";\r\nconst developmentServerHost = \"http://localhost:8769/graphql\";\r\nconst productServerHost = \"http://www.theaurora.cn:8769/graphql\";\r\nconst graphqlClient = new ApolloClient({ uri: developmentServerHost, fetch });\r\nexport default graphqlClient;\r\n\r\n","import gql from \"graphql-tag\";\r\nimport graphqlClient from \"./GraphQL\";\r\n\r\nexport const LOGIN = () => gql(`\r\nmutation Login($email: String!, $password: String!){\r\n login(email: $email, password: $password) {\r\n    err\r\n    message\r\n    response {\r\n      id\r\n      email\r\n      nickname\r\n      picture\r\n      position\r\n      company\r\n      description\r\n      text\r\n    }\r\n }\r\n}`);\r\nexport const toLogin = (email, password) => graphqlClient.mutate({\r\n  mutation: LOGIN(),\r\n  variables: { email, password }\r\n}).then(({ data: { login } }) => login);\r\n\r\nexport const REGISTER = () => gql(`\r\nmutation CreateUser($nickname: String!, $password: String!, $email: String!){\r\n   createUser(input: {\r\n     nickname: $nickname\r\n     password: $password\r\n     email: $email\r\n   }){\r\n     err\r\n     message\r\n     response {\r\n      id\r\n      email\r\n      nickname\r\n      picture\r\n     }\r\n   }\r\n}`);\r\nexport const toRegister = (nickname, password, email) => graphqlClient.mutate({\r\n  mutation: REGISTER(),\r\n  variables: { input: { nickname, password, email } }\r\n}).then(({ data: { createUser } }) => createUser);\r\nexport const POST_ARTICLE = () => gql(`\r\nmutation CreateArticle($input: InputArticle!){\r\n     createArticle(input: $input){\r\n          err\r\n          message\r\n          response {\r\n            id\r\n          }\r\n       }\r\n}`);\r\n\r\nexport const toPostArticle = (article) => graphqlClient.mutate({\r\n  mutation: POST_ARTICLE(),\r\n  variables: { input: article }\r\n}).then(({ data: { createArticle } }) => createArticle);\r\n\r\nexport const CREATE_COMMENT = () => gql(`\r\nmutation CreateComment($input: InputComment!){\r\n  createComment(input: $input){\r\n    err\r\n    message\r\n  }\r\n}`);\r\nexport const toCreateComment = (comment) => graphqlClient.mutate({\r\n  mutation: CREATE_COMMENT(),\r\n  variables: { input: comment }\r\n}).then(({ data: { createComment } }) => createComment);\r\n\r\nexport const LIKE_ARTICLE = () => gql(`\r\nmutation ArticleLike($id: ID!){\r\n  articleLike(id: $id){\r\n    err\r\n    message\r\n  }\r\n}`);\r\n\r\nexport const toLikeArticle = (id) => graphqlClient.mutate({\r\n  mutation: LIKE_ARTICLE(),\r\n  variables: { id }\r\n}).then(({ data: { articleLike } }) => articleLike);","import gql from \"graphql-tag\";\r\nimport graphqlClient from \"./GraphQL\";\r\n\r\nexport const QUERY_ARTICLE_BY_CLASSIFY = () => gql(`\r\nquery Article($classify: String!) {\r\n          article(classify: $classify) {\r\n              id\r\n              title\r\n              classify\r\n              text\r\n              publishTime\r\n              readNumber\r\n              likeNumber\r\n              commentNumber\r\n              collectionNumber\r\n              shareNumber\r\n              image\r\n              userId\r\n              nickname\r\n              email\r\n              picture\r\n              name\r\n     }\r\n}`);\r\nexport const getArticleByClassify = (classify) => graphqlClient.query({\r\n  query: QUERY_ARTICLE_BY_CLASSIFY(),\r\n  variables: { classify }\r\n}).then(({ data: { article } }) => article);\r\n\r\n\r\nexport const QUERY_ARTICLE_AND_COMMENT_BY_ID = () => gql(`\r\nquery ArticleAndCommentById($id: ID!) {\r\n          articleById(id: $id) {\r\n              title\r\n              classify\r\n              text\r\n              publishTime\r\n              readNumber\r\n              likeNumber\r\n              commentNumber\r\n              collectionNumber\r\n              shareNumber\r\n              image\r\n              userId\r\n              nickname\r\n              email\r\n              picture\r\n              name\r\n              position\r\n              company\r\n              description\r\n          }\r\n          commentByArticleId(id: $id){\r\n              userId\r\n              text\r\n              nickname\r\n              articleId\r\n              time\r\n              id\r\n              picture\r\n          }\r\n          \r\n}`\r\n);\r\n\r\nexport const getArtCommById = (id) => graphqlClient.query({\r\n  query: QUERY_ARTICLE_AND_COMMENT_BY_ID(),\r\n  variables: { id }\r\n}).then(({ data }) => data);\r\n\r\nexport const QUERY_USER_BY_ID = () => gql(`\r\nquery User($id: ID!) {\r\n    user(id: $id){\r\n      id\r\n      email\r\n      nickname\r\n      picture\r\n      position\r\n      company\r\n      description\r\n      text\r\n    }\r\n}`);\r\n\r\nexport const getUserById = (id) => graphqlClient.query({\r\n  query: QUERY_USER_BY_ID(),\r\n  variables: { id }\r\n}).then(({ data: { id } }) => id);\r\n\r\n\r\nexport const QUERY_CLASSIFY = () => gql(`\r\nquery{\r\n    classify{\r\n      name\r\n      description\r\n      picture\r\n    }\r\n}`);\r\nexport const getAllClassify = () => graphqlClient.query({\r\n  query: QUERY_CLASSIFY(),\r\n}).then(({ data }) => data);\r\n\r\nexport const QUERY_LABEL_BY_CLASSIFY = () => gql(`\r\nquery  LabelByClassify($classify: String!) {\r\n          labelByClassify(classify: $classify){\r\n            id\r\n            name\r\n            classify\r\n            description\r\n            picture\r\n      } \r\n}`);\r\nexport const getLabelByClassify = (classify) => graphqlClient.query({\r\n  query: QUERY_LABEL_BY_CLASSIFY(),\r\n  variables: { classify }\r\n}).then(({ data: { labelByClassify } }) => labelByClassify);\r\n\r\nexport const QUERY_CLASSIFY_AND_LABEL = () => gql(`\r\nquery labelByClassify($defaultClassify: String!) {\r\n      labelByClassify(classify: $defaultClassify){\r\n        id\r\n        name\r\n      } \r\n      classify{\r\n         name\r\n      }\r\n}`);\r\n\r\nexport const getClassifyLabel = (defaultClassify) => graphqlClient.query({\r\n  query: QUERY_CLASSIFY_AND_LABEL(),\r\n  variables: { defaultClassify }\r\n}).then(({ data}) => data);\r\n\r\nexport const QUERY_COMMENT_BY_ArticleId = () => gql(`\r\nquery CommentByArticleId($id: ID){\r\n  commentByArticleId(id: $id){\r\n    userId\r\n    text\r\n    nickname\r\n    articleId\r\n    time\r\n    id\r\n    picture\r\n  }\r\n}`);\r\nexport const getCommByArtId = (id) => graphqlClient.query({\r\n  query: QUERY_COMMENT_BY_ArticleId(),\r\n  variables: { id }\r\n}).then(({ data: { commentByArticleId } }) => commentByArticleId);\r\n\r\nexport const QUERY_REPLY_BY_COMMENT_ID = () => gql(`\r\nquery ReplyByComment{\r\n  replyByComment(id: $id) {\r\n    id\r\n    userId\r\n    commentId\r\n    text\r\n    time\r\n  }\r\n}`);\r\nexport const getReplyByCommId = (id) => graphqlClient.query({\r\n  query: QUERY_REPLY_BY_COMMENT_ID(),\r\n  variables: { id }\r\n}).then(({ data: { replyByComment } }) => replyByComment);","import * as Types from \"./actionsTypes\";\r\nimport client from \"GQL/GraphQL\";\r\nimport { QUERY_USER_BY_ID } from \"GQL/Query\";\r\n\r\nexport const loginUser = userInfo => ({ type: Types.LOGIN_USER, isLogin: true, ...userInfo });\r\n\r\nexport const registerUser = userInfo => ({\r\n  type: Types.REGISTER_USER,\r\n  isLogin: true,\r\n  ...userInfo\r\n});\r\n\r\nexport const fetchUserResponse = userInfo => ({\r\n  type: Types.FETCH_USER_SUCCESS,\r\n  response: {\r\n    ...userInfo\r\n  }\r\n});\r\nexport const fetchUser = id => dispatch => {\r\n  dispatch({ type: Types.FETCH_USER_REQUEST, isFetching: true, err: false });\r\n  return client.query({ query: QUERY_USER_BY_ID(), variables: { id } })\r\n    .then(data => data.data.user)\r\n    .then(user => {\r\n      console.log(user, typeof user);\r\n      dispatch(fetchUserResponse(user))\r\n    })\r\n    .catch(err => dispatch({ type: Types.FETCH_USER_FAILURE, isFetching: false, err: true }))\r\n};\r\n\r\nexport const indexPageSelectClassify = classify => ({\r\n  type: Types.UI_INDEX_SELECT_CLASSIFY,\r\n  classify\r\n});","export const LOGIN_USER = \"login_user\";\r\n\r\nexport const REGISTER_USER = \"register_user\";\r\n\r\nexport const FETCH_USER_REQUEST = \"fetch_user_request\";\r\n\r\nexport const FETCH_USER_FAILURE = \"fetch_user_failure\";\r\n\r\nexport const FETCH_USER_SUCCESS = \"fetch_user_success\";\r\n\r\nexport const UI_INDEX_SELECT_CLASSIFY = \"ui_index_select_classify\";\r\n","import React, { Component } from \"react\";\r\nimport less from \"./style.less\";\r\nimport PropTypes from \"prop-types\";\r\nimport Router from \"next/router\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"actions/actions\";\r\nimport { setCookies } from \"utils/utils\";\r\n\r\nexport const Check = ({ err, enable }) => (<i className={ !err ? \"fa fa-check\" : \"fa fa-times\" }\r\n                                              style={ {\r\n                                                color: !err ? \"chartreuse\" : \"red\",\r\n                                                display: enable ? \"none\" : \"inline\"\r\n                                              } }\r\n/>);\r\n\r\nclass Login extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      emailMessage: \"\",\r\n      passwordMessage: \"\",\r\n      waiting: false\r\n    };\r\n    this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.onLogin = this.onLogin.bind(this);\r\n  }\r\n\r\n  handleEmailChange (e) {\r\n    const validate = this.props.validateEmail;\r\n    const status = validate(e.target.value);\r\n    this.setState({\r\n      email: e.target.value,\r\n      emailMessage: status.err ? status.message : \"\"\r\n    })\r\n  }\r\n\r\n  handlePasswordChange (e) {\r\n    const validate = this.props.validatePassword;\r\n    const status = validate(e.target.value);\r\n    this.setState({\r\n      password: e.target.value,\r\n      passwordMessage: status.err ? status.message : \"\"\r\n    })\r\n  }\r\n\r\n  onLogin () {\r\n    const { handleSubmit, loginSuccess } = this.props;\r\n    handleSubmit(this.state.email, this.state.password)\r\n      .then(({ err, message, response }) => {\r\n        if (err) {\r\n          if (message.search(/password/)) {\r\n            this.setState({\r\n              passwordMessage: message\r\n            });\r\n          } else {\r\n            this.setState({\r\n              emailMessage: message\r\n            });\r\n          }\r\n        } else {\r\n          //set cookies\r\n          setCookies(response.id);\r\n          loginSuccess(response);\r\n          Router.push(\"/\").then(() => {});\r\n        }\r\n      })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className={ less.login }>\r\n        <div className={ less[\"email\"] }>\r\n          <input placeholder=\"email\" onChange={ this.handleEmailChange } autoComplete=\"off\"/>\r\n          <Check err={ this.state.emailMessage !== \"\" } enable={ this.state.email === \"\" }/>\r\n          <div className={ less.tip }>\r\n            { this.state.emailMessage }\r\n          </div>\r\n        </div>\r\n        <div className={ less[\"password\"] }>\r\n          <input type=\"password\" placeholder=\"password\"\r\n                 onChange={ this.handlePasswordChange } autoComplete=\"off\"/>\r\n          <Check err={ this.state.passwordMessage !== \"\" } enable={ this.state.password === \"\" }/>\r\n          <div className={ less.tip }>\r\n            { this.state.passwordMessage }\r\n          </div>\r\n        </div>\r\n        <button onClick={ this.onLogin }\r\n                disabled={ (this.state.passwordMessage || this.state.emailMessage || (!this.state.password || !this.state.email)) }>\r\n          Login\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  handleSubmit: PropTypes.objectOf({ then: PropTypes.func, catch: PropTypes.func }),\r\n  validateEmail: PropTypes.func,\r\n  validatePassword: PropTypes.func,\r\n  loginSuccess: PropTypes.func\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    userState: state\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    loginSuccess: userInfo => dispatch(loginUser(userInfo))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, { Component } from \"react\";\r\nimport less from \"./style.less\";\r\nimport Login from \"./login\";\r\nimport Register from \"./register\";\r\nimport { mergeClassName } from \"utils/utils\";\r\nimport client from \"GQL/GraphQL\";\r\nimport { LOGIN, REGISTER, toLogin, toRegister } from \"GQL/Mutation\";\r\nimport { validateNickname, validateEmail, validatePassword } from \"utils/utils\";\r\n\r\nexport default class LoginRegister extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      currentActive: 0,\r\n    };\r\n  }\r\n\r\n  static handleLogin (email, password) {\r\n    return toLogin(email, password)\r\n  }\r\n\r\n  static handleRegister (nickname, email, password) {\r\n    return toRegister(nickname, email, password)\r\n  }\r\n\r\n  render () {\r\n    const cur = this.state.currentActive;\r\n    const { pending, fulfill, reject } = this.state;\r\n    return (\r\n      <div className={ less[\"login-register\"] }>\r\n        <div className={ less.bg }>\r\n          <div/>\r\n          <div/>\r\n          <div/>\r\n        </div>\r\n        <div\r\n          className={ mergeClassName(less.container, pending && less.process, fulfill && less.fulfill, reject && less.error) }>\r\n          <div className={ less.title }>\r\n            <button className={ mergeClassName(less[\"login-button\"], cur === 0 && less.active) }\r\n                    onClick={ () => this.setState({\r\n                      currentActive: 0\r\n                    }) }>\r\n              LOGIN\r\n            </button>\r\n            <button className={ mergeClassName(less[\"register-button\"], cur === 1 && less.active) }\r\n                    onClick={ () => this.setState({\r\n                      currentActive: 1\r\n                    }) }\r\n            >\r\n              REGISTER\r\n            </button>\r\n          </div>\r\n          {\r\n            cur === 0 ? <Login validateEmail={ validateEmail }\r\n                               validatePassword={ validatePassword }\r\n                               handleSubmit={ LoginRegister.handleLogin }\r\n              />\r\n              : <Register validatePassword={ validatePassword }\r\n                          validateEmail={ validateEmail }\r\n                          validateNickname={ validateNickname }\r\n                          handleSubmit={ LoginRegister.handleRegister }\r\n\r\n              />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport less from \"./style.less\";\r\nimport { Check } from \"./login\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Router from \"next/router\";\r\nimport { registerUser, loginUser } from \"actions/actions\";\r\nimport { setCookies } from \"utils/utils\";\r\n\r\nclass Register extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      nickname: \"\",\r\n      password: \"\",\r\n      emailMessage: \"\",\r\n      nicknameMessage: \"\",\r\n      passwordMessage: \"\"\r\n    };\r\n    this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.handleNicknameChange = this.handleNicknameChange.bind(this);\r\n    this.onRegister = this.onRegister.bind(this);\r\n  }\r\n\r\n  handleEmailChange (e) {\r\n    const validate = this.props.validateEmail;\r\n    const status = validate(e.target.value);\r\n    this.setState({\r\n      email: e.target.value,\r\n      emailMessage: status.err ? status.message : \"\"\r\n    });\r\n  }\r\n\r\n  handleNicknameChange (e) {\r\n    const validate = this.props.validateNickname;\r\n    const status = validate(e.target.value);\r\n    this.setState({\r\n      nickname: e.target.value,\r\n      nicknameMessage: status.err ? status.message : \"\"\r\n    });\r\n  }\r\n\r\n  handlePasswordChange (e) {\r\n    const validate = this.props.validatePassword;\r\n    const status = validate(e.target.value);\r\n    this.setState({\r\n      password: e.target.value,\r\n      passwordMessage: status.err ? status.message : \"\"\r\n    });\r\n  }\r\n\r\n  onRegister () {\r\n    const { handleSubmit, registerSuccess, loginSuccess } = this.props;\r\n    handleSubmit(this.state.nickname, this.state.email, this.state.password)\r\n      .then(({ err, message, response }) => {\r\n        if (err) {\r\n          this.setState({ emailMessage: message })\r\n        } else {\r\n          setCookies(response.id);\r\n          delete response.__typename;\r\n          setTimeout(() => loginSuccess(response), 0);\r\n          Router.push(\"/\").then(() => {})\r\n        }\r\n      })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className={ less.register }>\r\n        <div className={ less[\"nickname\"] }>\r\n          <input placeholder=\"nickname\" onChange={ this.handleNicknameChange } autoComplete=\"off\"/>\r\n          <Check err={ this.state.nicknameMessage } enable={ !this.state.nickname }/>\r\n          <div className={ less.tip }>\r\n            { this.state.nicknameMessage }\r\n          </div>\r\n        </div>\r\n        <div className={ less[\"email\"] }>\r\n          <input placeholder=\"email\" onChange={ this.handleEmailChange } autoComplete=\"off\"/>\r\n          <Check err={ this.state.emailMessage } enable={ !this.state.email }/>\r\n          <div className={ less.tip }>\r\n            { this.state.emailMessage }\r\n          </div>\r\n        </div>\r\n        <div className={ less[\"password\"] }>\r\n          <input type=\"password\" placeholder=\"password\"\r\n                 onChange={ this.handlePasswordChange }\r\n                 autoComplete=\"off\"/>\r\n          <Check err={ this.state.passwordMessage } enable={ !this.state.password }/>\r\n          <div className={ less.tip }>\r\n            { this.state.passwordMessage }\r\n          </div>\r\n        </div>\r\n        <button onClick={ this.onRegister }\r\n                disabled={ (this.state.nicknameMessage || this.state.passwordMessage || this.state.emailMessage ||\r\n                  !this.state.email || !this.state.nickname || !this.state.password) }>\r\n          Register\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  validateNickname: PropTypes.func,\r\n  validateEmail: PropTypes.func,\r\n  validatePassword: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n  registerSuccess: PropTypes.func,\r\n  loginSuccess: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userState: state\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    registerSuccess: userInfo => dispatch(registerUser(userInfo)),\r\n    loginSuccess: userInfo => dispatch(loginUser(userInfo))\r\n  }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","module.exports = {\n\t\"login-register\": \"login-register___3mmYEX7LvP\",\n\t\"bg\": \"bg___PSeeMIvtcJ\",\n\t\"container\": \"container___NAs-ZWvl6l\",\n\t\"process\": \"process___1mGmhLSZMU\",\n\t\"fulfill\": \"fulfill___2IIytViZVf\",\n\t\"error\": \"error___ThK2_4HXXJ\",\n\t\"title\": \"title___1vmKbIcah4\",\n\t\"login-button\": \"login-button___1PneGvLpNo\",\n\t\"active\": \"active___2pTrzC_2to\",\n\t\"register-button\": \"register-button___24urQAAXgA\",\n\t\"login\": \"login___3tx0I--AyB\",\n\t\"mixin-login\": \"mixin-login___dTGKbO8m01\",\n\t\"email\": \"email___2FPkywR0bO\",\n\t\"password\": \"password___1yJ0A-i-QA\",\n\t\"nickname\": \"nickname___3afuZX91FJ\",\n\t\"tip\": \"tip___33fKgohTKU\",\n\t\"register\": \"register___2zJubRCPTy\"\n};","import React, { Component } from \"react\";\r\nimport LoginRegister from \"components/LoginRegister/loginRegister\";\r\nimport Router from \"next/router\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Login extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n  }\r\n  render () {\r\n    if (this.props.userState.isLogin) {\r\n      Router.push(\"/\")\r\n        .then(() => console.log(\"ok\"))\r\n    }\r\n    return (\r\n      <div className=\"__page\" id=\"login\">\r\n        <LoginRegister/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  userState: PropTypes.object\r\n};\r\nexport default connect(state => ({ userState: state.user }))(Login)","import cookies from \"react-cookies\";\r\n\r\nexport const mergeClassName = (...className) => className.filter(v => v).join(\" \");\r\n\r\nexport function convertTime (longNumber) {\r\n  let number = Number(longNumber);\r\n  number = parseInt(number / 1000);\r\n  if (number > 0 && number < 60) {\r\n    return number + \" sec\"\r\n  } else {\r\n    number = parseInt(number / 60);\r\n    if (number > 0 && number < 60) {\r\n      return number + \" min\"\r\n    } else {\r\n      number = parseInt(number / 60);\r\n      if (number > 0 && number < 24) {\r\n        return number + \" hour\"\r\n      } else {\r\n        number = parseInt(number / 24);\r\n        if (number > 0 && number < 30) {\r\n          return number + \" day\"\r\n        } else {\r\n          number = parseInt(number / 30);\r\n          if (number > 0 && number < 12) {\r\n            return number + \" mouth\"\r\n          } else {\r\n            number = parseInt(number / 12);\r\n            return number + \" year\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function validateEmail (email) {\r\n  const reg = /^\\w+((.\\w+)|(-\\w+))@[A-Za-z0-9]+((.|-)[A-Za-z0-9]+).[A-Za-z0-9]+$/;\r\n  if (!email) {\r\n    return {\r\n      err: true,\r\n      message: \"未输入邮箱\"\r\n    }\r\n  }\r\n  if (!reg.test(email)) {\r\n    return {\r\n      err: true,\r\n      message: \"邮箱格式错误\"\r\n    }\r\n  }\r\n  return {\r\n    err: false\r\n  }\r\n}\r\n\r\nexport function validatePassword (password) {\r\n  const reg = /[A-Za-z0-9]{6,15}/;\r\n  if (!password) {\r\n    return {\r\n      err: true,\r\n      message: \"未输入密码\"\r\n    }\r\n  }\r\n  if (!reg.test(password)) {\r\n    return {\r\n      err: true,\r\n      message: \"密码格式错误，请输入A~Z,a~z,0~9，且长度为6-15的密码\"\r\n    }\r\n  }\r\n  return {\r\n    err: false\r\n  }\r\n}\r\n\r\nexport function validateNickname (nickname) {\r\n  const reg = /[a-zA-Z0-9\\-_.]{5,10}/;\r\n  if (!nickname) {\r\n    return {\r\n      err: true,\r\n      message: \"未输入昵称\"\r\n    }\r\n  }\r\n  if (!reg.test(nickname)) {\r\n    return {\r\n      err: true,\r\n      message: \"昵称格式错误，请输入a~z,A~Z,0~9,特殊字符_-.的昵称\"\r\n    }\r\n  }\r\n  return {\r\n    err: false\r\n  }\r\n}\r\n\r\nexport const setCookies = id => {\r\n  const expires = new Date(Date.now());\r\n  expires.setDate(expires.getDate() + 2);\r\n  return cookies.save(\"userId\", id, {\r\n    path: \"/\",\r\n    maxAge: 3600 * 2,\r\n  });\r\n};\r\nexport const loadCookies = key => cookies.load(key);\r\n\r\nexport const removeCookies = key => cookies.remove(key);","module.exports = require(\"apollo-boost\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/router\");","module.exports = require(\"node-fetch\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-cookies\");","module.exports = require(\"react-redux\");"],"mappings":"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AAAA;AAOA;;;;AA5FA;AACA;AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;;;;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAdA;AACA;AAgBA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACvGA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}