{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a2ddcc9bcf2691057ce1.hot-update.js","sources":["webpack:///./GQL/Query.js"],"sourcesContent":["import gql from \"graphql-tag\";\r\nimport graphqlClient from \"./GraphQL\";\r\n\r\nexport const QUERY_ARTICLE_BY_CLASSIFY = () => gql(`\r\nquery Article($classify: String!) {\r\n          article(classify: $classify) {\r\n              id\r\n              title\r\n              classify\r\n              text\r\n              publishTime\r\n              readNumber\r\n              likeNumber\r\n              commentNumber\r\n              collectionNumber\r\n              shareNumber\r\n              image\r\n              userId\r\n              nickname\r\n              email\r\n              picture\r\n              name\r\n     }\r\n}`);\r\nexport const getArticleByClassify = (classify) => graphqlClient.query({\r\n  query: QUERY_ARTICLE_BY_CLASSIFY(),\r\n  variables: { classify }\r\n}).then(({ data: { article } }) => article);\r\n\r\n\r\nexport const QUERY_ARTICLE_AND_COMMENT_BY_ID = () => gql(`\r\nquery ArticleAndCommentById($id: ID!) {\r\n          articleById(id: $id) {\r\n              title\r\n              classify\r\n              text\r\n              publishTime\r\n              readNumber\r\n              likeNumber\r\n              commentNumber\r\n              collectionNumber\r\n              shareNumber\r\n              image\r\n              userId\r\n              nickname\r\n              email\r\n              picture\r\n              name\r\n              position\r\n              company\r\n              description\r\n          }\r\n          commentByArticleId(id: $id){\r\n              userId\r\n              text\r\n              nickname\r\n              articleId\r\n              time\r\n              id\r\n              picture\r\n          }\r\n          \r\n}`\r\n);\r\n\r\nexport const getArtCommById = (id) => graphqlClient.query({\r\n  query: QUERY_ARTICLE_AND_COMMENT_BY_ID(),\r\n  variables: { id }\r\n}).then(({ data }) => data);\r\n\r\nexport const QUERY_USER_BY_ID = () => gql(`\r\nquery User($id: ID!) {\r\n    user(id: $id){\r\n      id\r\n      email\r\n      nickname\r\n      picture\r\n      position\r\n      company\r\n      description\r\n      text\r\n    }\r\n}`);\r\n\r\nexport const getUserById = (id) => graphqlClient.query({\r\n  query: QUERY_USER_BY_ID(),\r\n  variables: { id }\r\n}).then(({ data: { id } }) => id);\r\n\r\n\r\nexport const QUERY_CLASSIFY = () => gql(`\r\nquery{\r\n    classify{\r\n      name\r\n      description\r\n      picture\r\n    }\r\n}`);\r\nexport const getAllClassify = (defaultClassify) => graphqlClient.query({\r\n  query: QUERY_CLASSIFY(),\r\n  variables: {defaultClassify}\r\n}).then(({ data }) => data);\r\n\r\nexport const QUERY_LABEL_BY_CLASSIFY = () => gql(`\r\nquery  LabelByClassify($classify: String!) {\r\n          labelByClassify(classify: $classify){\r\n            id\r\n            name\r\n            classify\r\n            description\r\n            picture\r\n      } \r\n}`);\r\nexport const getLabelByClassify = (classify) => graphqlClient.query({\r\n  query: QUERY_LABEL_BY_CLASSIFY(),\r\n  variables: { classify }\r\n}).then(({ data: { labelByClassify } }) => labelByClassify);\r\n\r\nexport const QUERY_CLASSIFY_AND_LABEL = () => gql(`\r\nquery labelByClassify($defaultClassify: String!) {\r\n      labelByClassify(classify: $defaultClassify){\r\n        id\r\n        name\r\n      } \r\n      classify{\r\n         name\r\n      }\r\n}`);\r\n\r\nexport const getClassifyLabel = (defaultClassify) => graphqlClient.query({\r\n  query: QUERY_CLASSIFY_AND_LABEL(),\r\n  variables: { defaultClassify }\r\n}).then(({ data}) => data);\r\n\r\nexport const QUERY_COMMENT_BY_ArticleId = () => gql(`\r\nquery CommentByArticleId($id: ID){\r\n  commentByArticleId(id: $id){\r\n    userId\r\n    text\r\n    nickname\r\n    articleId\r\n    time\r\n    id\r\n    picture\r\n  }\r\n}`);\r\nexport const getCommByArtId = (id) => graphqlClient.query({\r\n  query: QUERY_COMMENT_BY_ArticleId(),\r\n  variables: { id }\r\n}).then(({ data: { commentByArticleId } }) => commentByArticleId);\r\n\r\nexport const QUERY_REPLY_BY_COMMENT_ID = () => gql(`\r\nquery ReplyByComment{\r\n  replyByComment(id: $id) {\r\n    id\r\n    userId\r\n    commentId\r\n    text\r\n    time\r\n  }\r\n}`);\r\nexport const getReplyByCommId = (id) => graphqlClient.query({\r\n  query: QUERY_REPLY_BY_COMMENT_ID(),\r\n  variables: { id }\r\n}).then(({ data: { replyByComment } }) => replyByComment);"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAqBA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAHA;AAMA;AAAA;AAAA;AAmCA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAcA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAHA;AAMA;AAAA;AAAA;AAQA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAUA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAWA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAYA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAUA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAHA;;;;A","sourceRoot":""}